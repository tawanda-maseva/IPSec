// Design notes for the lab, explaining purpose of configs.

// Security policies are stateful in nature. So when Host1 pings Host2, in SRX1, allows this via VPN-OUT. Return traffic is
	automatically permitted. So VPN-IN is not used. 
	SRX2, on the other hand, allows the ping from Host1 through policy VPN-IN. Return traffic (i.e. Host2's replies) are 
	automatically allowed - so VPN-OUT is not used.
jcluser@vSRX1> show security flow session    
	Session ID: 411, Policy name: VPN-OUT/5, State: Stand-alone, Timeout: 2, Valid
	  In: 10.100.11.2/49183 --> 10.100.22.2/329;icmp, Conn Tag: 0x0, If: ge-0/0/0.0, Pkts: 1, Bytes: 84, 
	  Out: 10.100.22.2/329 --> 10.100.11.2/49183;icmp, Conn Tag: 0x0, If: st0.0, Pkts: 1, Bytes: 84, 	

	Session ID: 412, Policy name: VPN-OUT/5, State: Stand-alone, Timeout: 2, Valid
	  In: 10.100.11.2/49183 --> 10.100.22.2/330;icmp, Conn Tag: 0x0, If: ge-0/0/0.0, Pkts: 1, Bytes: 84, 
	  Out: 10.100.22.2/330 --> 10.100.11.2/49183;icmp, Conn Tag: 0x0, If: st0.0, Pkts: 1, Bytes: 84, 	

	Session ID: 413, Policy name: VPN-OUT/5, State: Stand-alone, Timeout: 4, Valid
	  In: 10.100.11.2/49183 --> 10.100.22.2/331;icmp, Conn Tag: 0x0, If: ge-0/0/0.0, Pkts: 1, Bytes: 84, 
	  Out: 10.100.22.2/331 --> 10.100.11.2/49183;icmp, Conn Tag: 0x0, If: st0.0, Pkts: 1, Bytes: 84, 
jcluser@vSRX2> show security flow session    
	Session ID: 615, Policy name: VPN-IN/7, State: Stand-alone, Timeout: 2, Valid
	  In: 10.100.11.2/49183 --> 10.100.22.2/538;icmp, Conn Tag: 0x0, If: st0.0, Pkts: 1, Bytes: 84, 
	  Out: 10.100.22.2/538 --> 10.100.11.2/49183;icmp, Conn Tag: 0x0, If: ge-0/0/0.0, Pkts: 1, Bytes: 84, 	

	Session ID: 616, Policy name: VPN-IN/7, State: Stand-alone, Timeout: 2, Valid
	  In: 10.100.11.2/49183 --> 10.100.22.2/539;icmp, Conn Tag: 0x0, If: st0.0, Pkts: 1, Bytes: 84, 
	  Out: 10.100.22.2/539 --> 10.100.11.2/49183;icmp, Conn Tag: 0x0, If: ge-0/0/0.0, Pkts: 1, Bytes: 84, 	

	Session ID: 617, Policy name: VPN-IN/7, State: Stand-alone, Timeout: 4, Valid
	  In: 10.100.11.2/49183 --> 10.100.22.2/540;icmp, Conn Tag: 0x0, If: st0.0, Pkts: 1, Bytes: 84, 
	  Out: 10.100.22.2/540 --> 10.100.11.2/49183;icmp, Conn Tag: 0x0, If: ge-0/0/0.0, Pkts: 1, Bytes: 84, 

// If Host2 pings Host1, the reverse applies i.e. SRX2 will use VPN-OUT while SRX1 will use VPN-IN. Hence in both SRX1 
	and SRX2, we must configure VPN-IN and VPN-OUT as if the security policies are stateless. Below are the session tables when Host1 pings Host2 and Host2 pings Host1 simultaneosly. Notice that both the SRXs uses VPN-IN and VPN-OUT simultaneosly.
jcluser@vSRX1> show security flow session    
	Session ID: 1282, Policy name: VPN-OUT/5, State: Stand-alone, Timeout: 2, Valid
	  In: 10.100.11.2/49183 --> 10.100.22.2/933;icmp, Conn Tag: 0x0, If: ge-0/0/0.0, Pkts: 1, Bytes: 84, 
	  Out: 10.100.22.2/933 --> 10.100.11.2/49183;icmp, Conn Tag: 0x0, If: st0.0, Pkts: 1, Bytes: 84, 	

	Session ID: 1283, Policy name: VPN-IN/7, State: Stand-alone, Timeout: 2, Valid
	  In: 10.100.22.2/62239 --> 10.100.11.2/267;icmp, Conn Tag: 0x0, If: st0.0, Pkts: 1, Bytes: 84, 
	  Out: 10.100.11.2/267 --> 10.100.22.2/62239;icmp, Conn Tag: 0x0, If: ge-0/0/0.0, Pkts: 1, Bytes: 84, 	

	Session ID: 1284, Policy name: VPN-OUT/5, State: Stand-alone, Timeout: 2, Valid
	  In: 10.100.11.2/49183 --> 10.100.22.2/934;icmp, Conn Tag: 0x0, If: ge-0/0/0.0, Pkts: 1, Bytes: 84, 
	  Out: 10.100.22.2/934 --> 10.100.11.2/49183;icmp, Conn Tag: 0x0, If: st0.0, Pkts: 1, Bytes: 84, 	

	Session ID: 1285, Policy name: VPN-IN/7, State: Stand-alone, Timeout: 2, Valid
	  In: 10.100.22.2/62239 --> 10.100.11.2/268;icmp, Conn Tag: 0x0, If: st0.0, Pkts: 1, Bytes: 84, 
	  Out: 10.100.11.2/268 --> 10.100.22.2/62239;icmp, Conn Tag: 0x0, If: ge-0/0/0.0, Pkts: 1, Bytes: 84, 	

	Session ID: 1286, Policy name: VPN-OUT/5, State: Stand-alone, Timeout: 4, Valid
	  In: 10.100.11.2/49183 --> 10.100.22.2/935;icmp, Conn Tag: 0x0, If: ge-0/0/0.0, Pkts: 1, Bytes: 84, 
	  Out: 10.100.22.2/935 --> 10.100.11.2/49183;icmp, Conn Tag: 0x0, If: st0.0, Pkts: 1, Bytes: 84, 
jcluser@vSRX2> show security flow session    
	Session ID: 1403, Policy name: VPN-IN/7, State: Stand-alone, Timeout: 2, Valid
	  In: 10.100.11.2/49183 --> 10.100.22.2/996;icmp, Conn Tag: 0x0, If: st0.0, Pkts: 1, Bytes: 84, 
	  Out: 10.100.22.2/996 --> 10.100.11.2/49183;icmp, Conn Tag: 0x0, If: ge-0/0/0.0, Pkts: 1, Bytes: 84, 	

	Session ID: 1404, Policy name: VPN-OUT/5, State: Stand-alone, Timeout: 2, Valid
	  In: 10.100.22.2/62239 --> 10.100.11.2/330;icmp, Conn Tag: 0x0, If: ge-0/0/0.0, Pkts: 1, Bytes: 84, 
	  Out: 10.100.11.2/330 --> 10.100.22.2/62239;icmp, Conn Tag: 0x0, If: st0.0, Pkts: 1, Bytes: 84, 	

	Session ID: 1405, Policy name: VPN-IN/7, State: Stand-alone, Timeout: 2, Valid
	  In: 10.100.11.2/49183 --> 10.100.22.2/997;icmp, Conn Tag: 0x0, If: st0.0, Pkts: 1, Bytes: 84, 
	  Out: 10.100.22.2/997 --> 10.100.11.2/49183;icmp, Conn Tag: 0x0, If: ge-0/0/0.0, Pkts: 1, Bytes: 84, 	

	Session ID: 1406, Policy name: VPN-OUT/5, State: Stand-alone, Timeout: 2, Valid
	  In: 10.100.22.2/62239 --> 10.100.11.2/331;icmp, Conn Tag: 0x0, If: ge-0/0/0.0, Pkts: 1, Bytes: 84, 
	  Out: 10.100.11.2/331 --> 10.100.22.2/62239;icmp, Conn Tag: 0x0, If: st0.0, Pkts: 1, Bytes: 84, 	

	Session ID: 1407, Policy name: VPN-IN/7, State: Stand-alone, Timeout: 4, Valid
	  In: 10.100.11.2/49183 --> 10.100.22.2/998;icmp, Conn Tag: 0x0, If: st0.0, Pkts: 1, Bytes: 84, 
	  Out: 10.100.22.2/998 --> 10.100.11.2/49183;icmp, Conn Tag: 0x0, If: ge-0/0/0.0, Pkts: 1, Bytes: 84, 	

	Session ID: 1408, Policy name: VPN-OUT/5, State: Stand-alone, Timeout: 4, Valid
	  In: 10.100.22.2/62239 --> 10.100.11.2/332;icmp, Conn Tag: 0x0, If: ge-0/0/0.0, Pkts: 1, Bytes: 84, 
	  Out: 10.100.11.2/332 --> 10.100.22.2/62239;icmp, Conn Tag: 0x0, If: st0.0, Pkts: 1, Bytes: 84, 	

	Session ID: 1409, Policy name: VPN-IN/7, State: Stand-alone, Timeout: 4, Valid
	  In: 10.100.11.2/49183 --> 10.100.22.2/999;icmp, Conn Tag: 0x0, If: st0.0, Pkts: 1, Bytes: 84, 
	  Out: 10.100.22.2/999 --> 10.100.11.2/49183;icmp, Conn Tag: 0x0, If: ge-0/0/0.0, Pkts: 1, Bytes: 84, 

// For host1 to reach the internet e.g. 172.32.13.2/30 on oobhr, we need SNAT at SRX1. SRX1 uses trust-to-internet-any policy 
	to permit this. SRX2 uses it's host-inbound policy to permit this.
jcluser@vSRX1> show security flow session    
	Session ID: 3503, Policy name: trust-to-internet-any/4, State: Stand-alone, Timeout: 2, Valid
	  In: 10.100.11.2/36640 --> 172.32.13.2/1;icmp, Conn Tag: 0x0, If: ge-0/0/0.0, Pkts: 1, Bytes: 84, 
	  Out: 172.32.13.2/1 --> 172.32.13.1/22507;icmp, Conn Tag: 0x0, If: ge-0/0/1.0, Pkts: 1, Bytes: 84, 	

	Session ID: 3504, Policy name: trust-to-internet-any/4, State: Stand-alone, Timeout: 2, Valid
	  In: 10.100.11.2/36640 --> 172.32.13.2/2;icmp, Conn Tag: 0x0, If: ge-0/0/0.0, Pkts: 1, Bytes: 84, 
	  Out: 172.32.13.2/2 --> 172.32.13.1/12751;icmp, Conn Tag: 0x0, If: ge-0/0/1.0, Pkts: 1, Bytes: 84, 	

	Session ID: 3505, Policy name: trust-to-internet-any/4, State: Stand-alone, Timeout: 4, Valid
	  In: 10.100.11.2/36640 --> 172.32.13.2/3;icmp, Conn Tag: 0x0, If: ge-0/0/0.0, Pkts: 1, Bytes: 84, 
	  Out: 172.32.13.2/3 --> 172.32.13.1/27146;icmp, Conn Tag: 0x0, If: ge-0/0/1.0, Pkts: 1, Bytes: 84, 	

	Session ID: 3506, Policy name: trust-to-internet-any/4, State: Stand-alone, Timeout: 4, Valid
	  In: 10.100.11.2/36640 --> 172.32.13.2/4;icmp, Conn Tag: 0x0, If: ge-0/0/0.0, Pkts: 1, Bytes: 84, 
	  Out: 172.32.13.2/4 --> 172.32.13.1/18083;icmp, Conn Tag: 0x0, If: ge-0/0/1.0, Pkts: 1, Bytes: 84, 
jcluser@vSRX2> show security flow session    
	Session ID: 3597, Policy name: self-traffic-policy/1, State: Stand-alone, Timeout: 2, Valid
	  In: 172.32.13.1/6218 --> 172.32.13.2/106;icmp, Conn Tag: 0x0, If: ge-0/0/1.0, Pkts: 1, Bytes: 84, 
	  Out: 172.32.13.2/106 --> 172.32.13.1/6218;icmp, Conn Tag: 0x0, If: .local..0, Pkts: 1, Bytes: 84, 	

	Session ID: 3598, Policy name: self-traffic-policy/1, State: Stand-alone, Timeout: 2, Valid
	  In: 172.32.13.1/4823 --> 172.32.13.2/107;icmp, Conn Tag: 0x0, If: ge-0/0/1.0, Pkts: 1, Bytes: 84, 
	  Out: 172.32.13.2/107 --> 172.32.13.1/4823;icmp, Conn Tag: 0x0, If: .local..0, Pkts: 1, Bytes: 84, 	

	Session ID: 3599, Policy name: self-traffic-policy/1, State: Stand-alone, Timeout: 4, Valid
	  In: 172.32.13.1/18825 --> 172.32.13.2/108;icmp, Conn Tag: 0x0, If: ge-0/0/1.0, Pkts: 1, Bytes: 84, 
	  Out: 172.32.13.2/108 --> 172.32.13.1/18825;icmp, Conn Tag: 0x0, If: .local..0, Pkts: 1, Bytes: 84, 

// IKE Proposal:
	authentication-method = Pre-shared keys 
	authentication-algo = hmac-sha256-128
	encryption-algo	= aes256-cbc
	DH-group = DH-group-14
jcluser@vSRX1> show security ike security-associations detail 
	IKE peer 172.32.13.2, Index 7167687, Gateway Name: oobhr01-ike-gateway
	  Role: Initiator, State: UP
	  Initiator cookie: df99bf7079a04932, Responder cookie: c16f9b60042ebfc6
	  Exchange type: IKEv2, Authentication method: Pre-shared-keys
	  Local: 172.32.13.1:500, Remote: 172.32.13.2:500
	  Lifetime: Expires in 28666 seconds
	  Reauth Lifetime: Disabled
	  IKE Fragmentation: Enabled, Size: 576
	  Remote Access Client Info: Unknown Client
	  Peer ike-id: 172.32.13.2
	  AAA assigned IP: 0.0.0.0
	  Algorithms:
	   Authentication        : hmac-sha256-128 
	   Encryption            : aes256-cbc
	   Pseudo random function: hmac-sha256
	   Diffie-Hellman group  : DH-group-14
	  Traffic statistics:
	   Input  bytes  :                  874
	   Output bytes  :                  890
	   Input  packets:                    3
	   Output packets:                    3
	   Input  fragmentated packets:       0
	   Output fragmentated packets:       0
	  IPSec security associations: 2 created, 0 deleted
	  Phase 2 negotiations in progress: 1	

	    Negotiation type: Quick mode, Role: Initiator, Message ID: 0
	    Local: 172.32.13.1:500, Remote: 172.32.13.2:500
	    Local identity: 172.32.13.1
	    Remote identity: 172.32.13.2
	    Flags: IKE SA is created

// IPSec VPN Proposal:
	security-protocol = ESP
	authentication-algo = hmac-sha256-128
	encryption-algo	= aes-cbc (256 bits)
jcluser@vSRX1> show security ipsec security-associations detail
	ID: 131073 Virtual-system: root, VPN Name: oobhr01-ipsec-vpn
	  Local Gateway: 172.32.13.1, Remote Gateway: 172.32.13.2
	  Local Identity: ipv4_subnet(any:0,[0..7]=0.0.0.0/0)
	  Remote Identity: ipv4_subnet(any:0,[0..7]=0.0.0.0/0)
	  Version: IKEv2
	  DF-bit: clear, Copy-Outer-DSCP Disabled, Bind-interface: st0.0
	  Port: 500, Nego#: 1, Fail#: 0, Def-Del#: 0 Flag: 0x600a29 
	  Multi-sa, Configured SAs# 1, Negotiated SAs#: 1 
	  Tunnel events: 
	    Tue Nov 28 2023 08:26:19: IPSec SA negotiation successfully completed (1 times)
	    Tue Nov 28 2023 08:26:19: IKE SA negotiation successfully completed (1 times)
	    Tue Nov 28 2023 08:26:18: Tunnel is ready. Waiting for trigger event or peer to trigger negotiation (1 times)
	    Tue Nov 28 2023 08:26:18: External interface's address received. Information updated (1 times)
	    Tue Nov 28 2023 08:26:18: Bind-interface's zone received. Information updated (1 times)
	    Tue Nov 28 2023 08:26:18: External interface's zone received. Information updated (1 times)
	  Direction: inbound, SPI: 33702157, AUX-SPI: 0
	                              , VPN Monitoring: -
	    Hard lifetime: Expires in 3176 seconds
	    Lifesize Remaining:  Unlimited
	    Soft lifetime: Expires in 2568 seconds
	    Mode: Tunnel(0 0), Type: dynamic, State: installed
	    Protocol: ESP, Authentication: hmac-sha256-128, Encryption: aes-cbc (256 bits)
	    Anti-replay service: counter-based enabled, Replay window size: 64
	  Direction: outbound, SPI: 46c5a532, AUX-SPI: 0
	                              , VPN Monitoring: -
	    Hard lifetime: Expires in 3176 seconds
	    Lifesize Remaining:  Unlimited
	    Soft lifetime: Expires in 2568 seconds
	    Mode: Tunnel(0 0), Type: dynamic, State: installed
	    Protocol: ESP, Authentication: hmac-sha256-128, Encryption: aes-cbc (256 bits)
	    Anti-replay service: counter-based enabled, Replay window size: 64



// iBGP between SRX1 and SRX2 is configured using P2P IPs of the VPN Tunnels (st0.0, 10.100.200.1/30). NHS policy is set. So
	 all prefixes that are exchanged via BGP use the VPN tunnel as next hop.
jcluser@vSRX1> show bgp summary 
	Threading mode: BGP I/O
	Default eBGP mode: advertise - accept, receive - accept
	Groups: 1 Peers: 1 Down peers: 0
	Table          Tot Paths  Act Paths Suppressed    History Damp State    Pending
	inet.0               
	                       1          1          0          0          0          0
	Peer                     AS      InPkt     OutPkt    OutQ   Flaps Last Up/Dwn State|#Active/Received/Accepted/Damped...
	10.100.200.2          65004        101        101       0       0       14:39 Establ
	  inet.0: 1/1/1/0
jcluser@vSRX1> show route protocol bgp 
	inet.0: 13 destinations, 14 routes (13 active, 0 holddown, 0 hidden)
	+ = Active Route, - = Last Active, * = Both
	10.0.0.0/8         *[BGP/170] 00:15:09, localpref 100
	                      AS path: I, validation-state: unverified
	                    >  to 10.100.200.2 via st0.0
	inet6.0: 1 destinations, 1 routes (1 active, 0 holddown, 0 hidden)
jcluser@vSRX2> show route protocol bgp 
	inet.0: 12 destinations, 14 routes (12 active, 0 holddown, 0 hidden)
	+ = Active Route, - = Last Active, * = Both
	10.100.11.0/24      [BGP/170] 00:15:21, localpref 100
	                      AS path: I, validation-state: unverified
	                    >  to 10.100.200.1 via st0.0
	inet6.0: 1 destinations, 1 routes (1 active, 0 holddown, 0 hidden)


// internet-to-junos-host policy uses applications to perform deep-packet inspection to packets destined to the SRX from
	internet. When host1 pings oobhr01-ge0/0/1 that is facing the ISP, SRX2 allows this through the permit-good-icmp policy:
jcluser@vSRX2> show security flow session 
	Session ID: 8836, Policy name: permit-good-icmp/8, State: Stand-alone, Timeout: 2, Valid
	  In: 172.32.13.1/20857 --> 172.32.13.2/922;icmp, Conn Tag: 0x0, If: ge-0/0/1.0, Pkts: 1, Bytes: 84, 
	  Out: 172.32.13.2/922 --> 172.32.13.1/20857;icmp, Conn Tag: 0x0, If: .local..0, Pkts: 1, Bytes: 84, 	

	Session ID: 8838, Policy name: permit-good-icmp/8, State: Stand-alone, Timeout: 2, Valid
	  In: 172.32.13.1/28709 --> 172.32.13.2/923;icmp, Conn Tag: 0x0, If: ge-0/0/1.0, Pkts: 1, Bytes: 84, 
	  Out: 172.32.13.2/923 --> 172.32.13.1/28709;icmp, Conn Tag: 0x0, If: .local..0, Pkts: 1, Bytes: 84, 	

	Session ID: 8840, Policy name: permit-good-icmp/8, State: Stand-alone, Timeout: 4, Valid
	  In: 172.32.13.1/31265 --> 172.32.13.2/924;icmp, Conn Tag: 0x0, If: ge-0/0/1.0, Pkts: 1, Bytes: 84, 
	  Out: 172.32.13.2/924 --> 172.32.13.1/31265;icmp, Conn Tag: 0x0, If: .local..0, Pkts: 1, Bytes: 84, 	

	Session ID: 8842, Policy name: permit-good-icmp/8, State: Stand-alone, Timeout: 4, Valid
	  In: 172.32.13.1/18403 --> 172.32.13.2/925;icmp, Conn Tag: 0x0, If: ge-0/0/1.0, Pkts: 1, Bytes: 84, 
	  Out: 172.32.13.2/925 --> 172.32.13.1/18403;icmp, Conn Tag: 0x0, If: .local..0, Pkts: 1, Bytes: 84, 

// INTERNET-IDS Intrusion detection system (IDS) is configured facing the internet to protect the device from common IP, TCP
	and ICMP attacks.
jcluser@vSRX2> show security screen ids-option INTERNET-IDS 
	Screen object status:	
	Name                                       value      
	  ICMP flood threshold                       100        
	  TCP port scan threshold                    5000       
	  ICMP address sweep threshold               5000       
	  IP tear drop                               enabled    
	  TCP SYN flood attack threshold             200        
	  TCP SYN flood alarm threshold              512        
	  TCP SYN flood source threshold             4000       
	  TCP SYN flood destination threshold        4000       
	  TCP SYN flood timeout                      20         
	  IP spoofing                                enabled    
	  ICMP ping of death                         enabled    
	  IP source route option                     enabled    
	  TCP land attack                            enabled    
	  ICMP fragmentation                         enabled    
	  Alarm without drop                         enabled    

// To model lo0 has WAP, we need special SNAT policy lo0-WIFI-to-internet to do SNAT on self-generated traffic.
jcluser@vSRX1> show security nat source rule all                
	Total rules: 2
	Total referenced IPv4/IPv6 ip-prefixes: 4/0
	source NAT rule: lo0-WIFI-to-internet   Rule-set: SNAT-lo0
	  Rule-Id                    : 1
	  Rule position              : 2
	  From zone
	  To zone                    : internet
	  Match
	    Source addresses         : 10.255.0.0      - 10.255.0.255
	    Destination addresses    : 0.0.0.0         - 255.255.255.255
	  Action                        : interface
	    Persistent NAT type         : N/A 
	    Persistent NAT mapping type : address-port-mapping 
	    Inactivity timeout          : 0
	    Max session number          : 0
	  Translation hits           : 4
	    Successful sessions      : 4
	  Number of sessions         : 0
	source NAT rule: WIFI-to-internet       Rule-set: SNAT
	  Rule-Id                    : 2
	  Rule position              : 1
	  From zone                  : WIFI
	  To zone                    : internet
	  Match
	    Source addresses         : 10.255.0.0      - 10.255.0.255
	    Destination addresses    : 0.0.0.0         - 255.255.255.255
	  Action                        : interface
	    Persistent NAT type         : N/A 
	    Persistent NAT mapping type : address-port-mapping 
	    Inactivity timeout          : 0
	    Max session number          : 0
	  Translation hits           : 0
	    Successful sessions      : 0
	  Number of sessions         : 0
	jcluser@vSRX1> 


// 10.0.0.0/8 from OOBHR needs to be redistributed into VRFs for connectivity.
jcluser@vSRX1> show route protocol bgp   
	inet.0: 17 destinations, 18 routes (17 active, 0 holddown, 0 hidden)
	+ = Active Route, - = Last Active, * = Both	

	10.0.0.0/8         *[BGP/170] 01:18:43, localpref 100
	                      AS path: I, validation-state: unverified
	                    >  to 10.100.200.2 via st0.0	

	oob.inet.0: 6 destinations, 6 routes (6 active, 0 holddown, 0 hidden)
	+ = Active Route, - = Last Active, * = Both	

	10.0.0.0/8         *[BGP/170] 00:15:41, localpref 100
	                      AS path: I, validation-state: unverified
	                    >  to 10.100.200.2 via st0.0